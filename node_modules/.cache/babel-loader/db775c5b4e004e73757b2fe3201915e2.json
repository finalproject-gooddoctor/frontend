{"ast":null,"code":"import _classCallCheck from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/CommentBox.js\";\nimport React, { Component } from 'react';\nexport var CommentBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentBox, _Component);\n\n  function CommentBox(props) {\n    var _this;\n\n    _classCallCheck(this, CommentBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentBox).call(this, props));\n    _this.addComment = _this.addComment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // addComment(e) {\n  //   // Prevent the default behaviour of form submit\n  //   e.preventDefault();\n  //   // Get the value of the comment box\n  //   // and make sure it not some empty strings\n  //   const comment = e.target.elements.comment.value.trim();\n  //   const name = e.target.elements.name.value.trim();\n  //   // Make sure name and comment boxes are filled\n  //   if (name && comment) {\n  //     const commentObject = { name, comment };\n  //     this.props.handleAddComment(commentObject);\n  //     // Publish comment\n  //     /*global Ably*/\n  //     const channel = Ably.channels.get('comments');\n  //     channel.publish('add_comment', commentObject, err => {\n  //       if (err) {\n  //         console.log('Unable to publish message; err = ' + err.message);\n  //       }\n  //     });\n  //     // Clear input fields\n  //     e.target.elements.comment.value = '';\n  //     e.target.elements.name.value = '';\n  //   }\n  // }\n\n\n  _createClass(CommentBox, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CommentBox;\n}(Component);\nexport default CommentBox;","map":{"version":3,"sources":["/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/CommentBox.js"],"names":["React","Component","CommentBox","props","addComment","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AACG,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAFiB;AAGlB,GAJJ,CAMG;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAlCH;AAAA;AAAA,6BAoCY;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAsBD;AA3DH;;AAAA;AAAA,EAAgCJ,SAAhC;AA8DA,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nexport class CommentBox extends Component {\n\t  constructor(props) {\n\t    super(props);\n\t    this.addComment = this.addComment.bind(this);\n\t  }\n\t\n\t  // addComment(e) {\n\t  //   // Prevent the default behaviour of form submit\n\t  //   e.preventDefault();\n\t\n\t  //   // Get the value of the comment box\n\t  //   // and make sure it not some empty strings\n\t  //   const comment = e.target.elements.comment.value.trim();\n\t  //   const name = e.target.elements.name.value.trim();\n\t\n\t  //   // Make sure name and comment boxes are filled\n\t  //   if (name && comment) {\n\t  //     const commentObject = { name, comment };\n\t\n\t  //     this.props.handleAddComment(commentObject);\n\t\n\t  //     // Publish comment\n\t  //     /*global Ably*/\n\t  //     const channel = Ably.channels.get('comments');\n\t  //     channel.publish('add_comment', commentObject, err => {\n\t  //       if (err) {\n\t  //         console.log('Unable to publish message; err = ' + err.message);\n\t  //       }\n\t  //     });\n\t\n\t  //     // Clear input fields\n\t  //     e.target.elements.comment.value = '';\n\t  //     e.target.elements.name.value = '';\n\t  //   }\n\t  // }\n\t\n\t  render() {\n    return (\n      <div>\n        {/* <h1 className=\"title\">Comments</h1>\n        <form onSubmit={this.addComment}>\n          <div className=\"field\">\n            <div className=\"control\">\n              <input type=\"text\" className=\"input\" name=\"name\" placeholder=\"Your name\" />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <textarea className=\"textarea\" name=\"comment\" placeholder=\"Add a comment\"></textarea>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <button className=\"button is-primary\">Submit</button>\n            </div>\n          </div>\n        </form> */}\n      </div>\n    );\n  }\n}\n\nexport default CommentBox;"]},"metadata":{},"sourceType":"module"}