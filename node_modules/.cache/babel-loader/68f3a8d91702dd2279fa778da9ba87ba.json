{"ast":null,"code":"import _classCallCheck from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/App.js\";\nimport React, { Component } from 'react';\nimport Drinformation from './components/Drinformation';\nimport CommentBox from './components/CommentBox';\nimport Comments from './components/Comments';\nimport Info from './components/Info'; //import Map from './Map';\n//import {GoogleApiWrapper} from 'google-maps-react';\n//import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nimport './App.css';\nimport PatientProfile from './components/PatientProfile'; //import { CurrentLocation } from './components/CurrentLocation';\n//let map;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.handleAddComment = _this.handleAddComment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      activePage: 'app',\n      doctors: [],\n      comments: [],\n      isLoaded: false //map:{}\n      // this.initMap = this.initMap.bind(this);\n\n    };\n    return _this;\n  } // componentDidMount(){\n  //   fetch('https://api.betterdoctor.com/2016-03-01/doctors?first_name=Terry&user_key=ff5d654bef674612132ad54458bfb6a5')\n  //   .then( res => res.json())\n  //   .then(json => {\n  //     this.setState({\n  //       isLoaded:true,\n  //       doctors:json,\n  //     })\n  //   })\n  //   .catch(error => console.log(error));\n  //    loadMap('https://maps.googleapis.com/maps/api/js?key=AIzaSyBRfODQceddU_9nyDJyCBQ5lSe20loOk2c&v=3&callback=initMap',function () { })\n  // }\n  // initMap() {\n  //   var getMap = document.getElementById(\"map\");\n  //   // console.log('sdjfbjhsdbfh');\n  //   // getMap.style.height = window.innerHeight + \"px\";\n  //   map = new window.google.maps.Map(getMap, {\n  //       center: {lat: 59.3293235, lng: 18.0685808},\n  //       zoom: 15\n  //   });\n  //   // console.log(map);\n  //   this.setState({map:map})\n  //   }\n\n\n  _createClass(App, [{\n    key: \"renderPage\",\n    value: function renderPage() {\n      console.log(this.state.activePage);\n\n      if (this.state.activePage === 'app') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Main, {\n          setActivePage: this.setActivePage.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      } // else if (this.state.activePage === 'main') {\n      //     return (\n      //       <div>\n      //         {/* <Main/> */}\n      //       </div>\n      //     )\n      // } \n      else if (this.state.activePage === 'costCalculate') {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(CostCalcuate, {\n            setActivePage: this.setActivePage.bind(this),\n            setReqInfo: this.setReqInfo.bind(this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }));\n        } else if (this.state.activePage === 'makeReq') {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(MakeRequest, {\n            setActivePage: this.setActivePage.bind(this),\n            reqInfo: this.state.reqInfo,\n            total: this.state.total,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }));\n        } else if (this.state.activePage === 'track') {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(Track, {\n            setActivePage: this.setActivePage.bind(this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }));\n        } else if (this.state.activePage === 'trackInfo') {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(TrackInfo, {\n            setActivePage: this.setActivePage.bind(this),\n            clientInfo: this.state.clientInfo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }));\n        } else if (this.state.activePage === 'ReqDone') {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(ReqDone, {\n            setActivePage: this.setActivePage.bind(this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }));\n        }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      /*global Ably*/\n      var channel = Ably.channels.get('comments');\n      channel.attach();\n      channel.once('attached', function () {\n        channel.history(function (err, page) {\n          // create a new array with comments only in an reversed order (i.e old to new)\n          var comments = Array.from(page.items.reverse(), function (item) {\n            return item.data;\n          });\n\n          _this2.setState({\n            comments: comments\n          });\n        });\n      });\n    }\n  }, {\n    key: \"handleAddComment\",\n    value: function handleAddComment(comment) {\n      this.setState(function (prevState) {\n        return {\n          comments: prevState.comments.concat(comment)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // var {isLoaded,doctors}= this.state;\n      // if(!isLoaded){\n      //   return <div>app</div>\n      // }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Drinformation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(PatientProfile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column is-half is-offset-one-quarter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(CommentBox, {\n        handleAddComment: this.handleAddComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        comments: this.state.comments.reverse(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })))))))\n      /* <div className=\"map\">\n       \n      <Map \n      google={this.props.google} zoom={14}>\n      <Marker onClick={this.onMarkerClick}\n      name={'Current location'} />\n      <InfoWindow onClose={this.onInfoWindowClose}>\n         </InfoWindow>\n      </Map>\n       </div> */\n\n      /* <Map\n      google={this.props.google}\n      center={{lat: 18.5204, lng: 73.8567}}\n      height='300px'\n      zoom={15}\n      /> */\n\n      /* data */\n\n      /* <ul>\n      {doctors.map(doctor =>(\n      <li key ={doctor.id}>\n      gender {doctor.gender} \n      last name : {doctor.last_name}\n      </li>\n      ))};\n      </ul> */\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // export default GoogleApiWrapper({\n//  apiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n// })(App);\n//   /**\n//  * Load the google maps Asynchronously\n//  * @param {url} url of the google maps script\n//  */\n// function loadMap(src,onloadFunction) {\n//   var ref = window.document.getElementsByTagName(\"script\")[0];\n//   var script = window.document.createElement(\"script\");\n//   script.src = src;\n//   script.async = true;\n//   script.onerror = loadError;\n//   if (onloadFunction) { script.onload = onloadFunction; }\n//   ref.parentNode.insertBefore(script, ref);\n// }\n// function loadError(oError) {\n// alert(\"Failed to load google map API \"+ oError.target.src );\n// }","map":{"version":3,"sources":["/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/App.js"],"names":["React","Component","Drinformation","CommentBox","Comments","Info","PatientProfile","App","props","handleAddComment","bind","state","activePage","doctors","comments","isLoaded","console","log","setActivePage","setReqInfo","reqInfo","total","clientInfo","channel","Ably","channels","get","attach","once","history","err","page","Array","from","items","reverse","item","data","setState","comment","prevState","concat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Drinformation from './components/Drinformation';\nimport CommentBox from './components/CommentBox';\nimport Comments from './components/Comments'; \nimport Info from './components/Info';\n//import Map from './Map';\n//import {GoogleApiWrapper} from 'google-maps-react';\n//import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport './App.css';\nimport PatientProfile from './components/PatientProfile';\n\n//import { CurrentLocation } from './components/CurrentLocation';\n//let map;\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.handleAddComment = this.handleAddComment.bind(this);\n    this.state={\n      activePage: 'app',\n      doctors:[],\n      comments:[],\n      isLoaded:false,\n      //map:{}\n    }\n\n    // this.initMap = this.initMap.bind(this);\n  }\n\n  // componentDidMount(){\n    \n  //   fetch('https://api.betterdoctor.com/2016-03-01/doctors?first_name=Terry&user_key=ff5d654bef674612132ad54458bfb6a5')\n  //   .then( res => res.json())\n  //   .then(json => {\n  //     this.setState({\n  //       isLoaded:true,\n  //       doctors:json,\n  //     })\n  //   })\n  //   .catch(error => console.log(error));\n\n  //    loadMap('https://maps.googleapis.com/maps/api/js?key=AIzaSyBRfODQceddU_9nyDJyCBQ5lSe20loOk2c&v=3&callback=initMap',function () { })\n  // }\n\n  // initMap() {\n  //   var getMap = document.getElementById(\"map\");\n  //   // console.log('sdjfbjhsdbfh');\n  //   // getMap.style.height = window.innerHeight + \"px\";\n\n  //   map = new window.google.maps.Map(getMap, {\n  //       center: {lat: 59.3293235, lng: 18.0685808},\n  //       zoom: 15\n  //   });\n  //   // console.log(map);\n  //   this.setState({map:map})\n  //   }\n  renderPage() {\n    console.log(this.state.activePage);\n    if (this.state.activePage === 'app'){\n      return (\n        <div>\n          <Main setActivePage={this.setActivePage.bind(this)}/>\n        </div>\n      )\n    } \n    // else if (this.state.activePage === 'main') {\n    //     return (\n    //       <div>\n    //         {/* <Main/> */}\n    //       </div>\n    //     )\n    // } \n    else if (this.state.activePage === 'costCalculate') {\n        return (\n          <div>\n            <CostCalcuate setActivePage={this.setActivePage.bind(this)} setReqInfo={this.setReqInfo.bind(this)}/>\n          </div>\n        )\n    } else if (this.state.activePage === 'makeReq') {\n        return (\n          <div>\n            <MakeRequest setActivePage={this.setActivePage.bind(this)} reqInfo={this.state.reqInfo} total={this.state.total}/>\n          </div>\n        )\n    } else if (this.state.activePage === 'track') {\n        return (\n          <div>\n            <Track setActivePage={this.setActivePage.bind(this)}/>\n          </div>\n        )\n    } else if (this.state.activePage === 'trackInfo') {\n      return (\n        <div>\n          <TrackInfo setActivePage={this.setActivePage.bind(this)} clientInfo={this.state.clientInfo}/>\n        </div>\n      )\n    } else if (this.state.activePage === 'ReqDone') {\n      return (\n        <div>\n          <ReqDone setActivePage={this.setActivePage.bind(this)}/>\n        </div>\n      )\n  }\n   }\n\n  componentDidMount() {\n    /*global Ably*/\n    const channel = Ably.channels.get('comments');\n   \n    channel.attach();\n      channel.once('attached', () => {\n        channel.history((err, page) => {\n          // create a new array with comments only in an reversed order (i.e old to new)\n          const comments = Array.from(page.items.reverse(), item => item.data)\n   \n          this.setState({ comments });\n        });\n      });\n  }\n  handleAddComment(comment) {\n    this.setState(prevState => {\n      return {\n        comments: prevState.comments.concat(comment)\n      };\n    });\n  }\n  render() {\n\n    // var {isLoaded,doctors}= this.state;\n    // if(!isLoaded){\n      //   return <div>app</div>\n      // }\n      return (\n        <div>\n        <Drinformation/> \n          <Info />\n          <PatientProfile/>\n         {/* <CurrentLocation/>  */}\n\n          <div className=\"map\">\n          {/* <MapContainer/> */}\n          <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-half is-offset-one-quarter\">\n              \n              <CommentBox handleAddComment={this.handleAddComment} />\n              <Comments comments={this.state.comments.reverse()} />\n            </div>\n          </div>\n        </div>\n      </section>\n         </div>\n        </div>\n      /* <div className=\"map\">\n       \n     <Map \n    google={this.props.google} zoom={14}>\n    <Marker onClick={this.onMarkerClick}\n    name={'Current location'} />\n    <InfoWindow onClose={this.onInfoWindowClose}>\n    \n    </InfoWindow>\n   </Map>\n       </div> */\n     /* <Map\n     google={this.props.google}\n     center={{lat: 18.5204, lng: 73.8567}}\n     height='300px'\n     zoom={15}\n    /> */\n\n  \n     /* data */\n     \n      /* <ul>\n    {doctors.map(doctor =>(\n    <li key ={doctor.id}>\n     gender {doctor.gender} \n     last name : {doctor.last_name}\n    </li>\n     ))};\n    </ul> */\n\n\n    \n    );\n  }\n}\n\nexport default App;\n// export default GoogleApiWrapper({\n//  apiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n// })(App);\n//   /**\n//  * Load the google maps Asynchronously\n//  * @param {url} url of the google maps script\n//  */\n// function loadMap(src,onloadFunction) {\n//   var ref = window.document.getElementsByTagName(\"script\")[0];\n//   var script = window.document.createElement(\"script\");\n//   script.src = src;\n//   script.async = true;\n//   script.onerror = loadError;\n//   if (onloadFunction) { script.onload = onloadFunction; }\n//   ref.parentNode.insertBefore(script, ref);\n// }\n// function loadError(oError) {\n// alert(\"Failed to load google map API \"+ oError.target.src );\n// }"]},"metadata":{},"sourceType":"module"}