{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom';\n// const mapStyles = {\n//   map: {\n//     position: 'absolute',\n//     width: '100%',\n//     height: '100%'\n//   }\n// };\n// export class CurrentLocation extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     const { lat, lng } = this.props.initialCenter;\n//     this.state = {\n//       currentLocation: {\n//         lat: lat,\n//         lng: lng\n//       }\n//     };\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevProps.google !== this.props.google) {\n//       this.loadMap();\n//     }\n//     if (prevState.currentLocation !== this.state.currentLocation) {\n//       this.recenterMap();\n//     }\n//   }\n//   recenterMap() {\n//     const map = this.map;\n//     const current = this.state.currentLocation;\n//     const google = this.props.google;\n//     const maps = google.maps;\n//     if (map) {\n//       let center = new maps.LatLng(current.lat, current.lng);\n//       map.panTo(center);\n//     }\n//   }\n//   componentDidMount() {\n//     if (this.props.centerAroundCurrentLocation) {\n//       if (navigator && navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition(pos => {\n//           const coords = pos.coords;\n//           this.setState({\n//             currentLocation: {\n//               lat: coords.latitude,\n//               lng: coords.longitude\n//             }\n//           });\n//         });\n//       }\n//     }\n//     this.loadMap();\n//   }\n//   loadMap() {\n//     if (this.props && this.props.google) {\n//       // checks if google is available\n//       const { google } = this.props;\n//       const maps = google.maps;\n//       const mapRef = this.refs.map;\n//       // reference to the actual DOM element\n//       const node = ReactDOM.findDOMNode(mapRef);\n//       let { zoom } = this.props;\n//       const { lat, lng } = this.state.currentLocation;\n//       const center = new maps.LatLng(lat, lng);\n//       const mapConfig = Object.assign(\n//         {},\n//         {\n//           center: center,\n//           zoom: zoom\n//         }\n//       );\n//       // maps.Map() is constructor that instantiates the map\n//       this.map = new maps.Map(node, mapConfig);\n//     }\n//   }\n//   renderChildren() {\n//     const { children } = this.props;\n//     if (!children) return;\n//     return React.Children.map(children, c => {\n//       if (!c) return;\n//       return React.cloneElement(c, {\n//         map: this.map,\n//         google: this.props.google,\n//         mapCenter: this.state.currentLocation\n//       });\n//     });\n//   }\n//   render() {\n//     const style = Object.assign({}, mapStyles.map);\n//    return (\n//      <div>\n//        <div style={style} ref=\"map\">\n//          Loading map...\n//        </div>\n//        {this.renderChildren()}\n//      </div>\n//    );\n//    }\n// }\n// export default CurrentLocation;\n// CurrentLocation.defaultProps = {\n//   zoom: 14,\n//   initialCenter: {\n//     lat: -1.2884,\n//     lng: 36.8233\n//   },\n//   centerAroundCurrentLocation: false,\n//   visible: true\n// };","map":{"version":3,"sources":["/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/CurrentLocation.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// const mapStyles = {\n//   map: {\n//     position: 'absolute',\n//     width: '100%',\n//     height: '100%'\n//   }\n// };\n\n// export class CurrentLocation extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     const { lat, lng } = this.props.initialCenter;\n//     this.state = {\n//       currentLocation: {\n//         lat: lat,\n//         lng: lng\n//       }\n//     };\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevProps.google !== this.props.google) {\n//       this.loadMap();\n//     }\n//     if (prevState.currentLocation !== this.state.currentLocation) {\n//       this.recenterMap();\n//     }\n//   }\n//   recenterMap() {\n//     const map = this.map;\n//     const current = this.state.currentLocation;\n\n//     const google = this.props.google;\n//     const maps = google.maps;\n\n//     if (map) {\n//       let center = new maps.LatLng(current.lat, current.lng);\n//       map.panTo(center);\n//     }\n//   }\n//   componentDidMount() {\n//     if (this.props.centerAroundCurrentLocation) {\n//       if (navigator && navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition(pos => {\n//           const coords = pos.coords;\n//           this.setState({\n//             currentLocation: {\n//               lat: coords.latitude,\n//               lng: coords.longitude\n//             }\n//           });\n//         });\n//       }\n//     }\n//     this.loadMap();\n//   }\n//   loadMap() {\n//     if (this.props && this.props.google) {\n//       // checks if google is available\n//       const { google } = this.props;\n//       const maps = google.maps;\n\n//       const mapRef = this.refs.map;\n\n//       // reference to the actual DOM element\n//       const node = ReactDOM.findDOMNode(mapRef);\n\n//       let { zoom } = this.props;\n//       const { lat, lng } = this.state.currentLocation;\n//       const center = new maps.LatLng(lat, lng);\n//       const mapConfig = Object.assign(\n//         {},\n//         {\n//           center: center,\n//           zoom: zoom\n//         }\n//       );\n\n//       // maps.Map() is constructor that instantiates the map\n//       this.map = new maps.Map(node, mapConfig);\n//     }\n//   }\n\n//   renderChildren() {\n//     const { children } = this.props;\n\n//     if (!children) return;\n\n//     return React.Children.map(children, c => {\n//       if (!c) return;\n//       return React.cloneElement(c, {\n//         map: this.map,\n//         google: this.props.google,\n//         mapCenter: this.state.currentLocation\n//       });\n//     });\n//   }\n//   render() {\n//     const style = Object.assign({}, mapStyles.map);\n//    return (\n//      <div>\n//        <div style={style} ref=\"map\">\n//          Loading map...\n//        </div>\n//        {this.renderChildren()}\n//      </div>\n//    );\n//    }\n// }\n// export default CurrentLocation;\n\n// CurrentLocation.defaultProps = {\n//   zoom: 14,\n//   initialCenter: {\n//     lat: -1.2884,\n//     lng: 36.8233\n//   },\n//   centerAroundCurrentLocation: false,\n//   visible: true\n// };"]},"metadata":{},"sourceType":"module"}