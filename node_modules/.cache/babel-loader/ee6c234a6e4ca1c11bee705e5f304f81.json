{"ast":null,"code":"import _classCallCheck from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/MapContainer.js\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react'; // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// import CurrentLocation from './CurrentLocation';\n// import CurrentLocation from './Map';\n\nvar mapStyles = {\n  position: \"relative\",\n  width: \"600px\",\n  height: \"400px\"\n};\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  // have state that stores your positions\n  function MapContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, props));\n    _this.state = {\n      positions: positions\n    };\n    return _this;\n  } // make fetch call\n\n\n  _createClass(MapContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('https://api.betterdoctor.com/2016-03-01/doctors?user_key=ff5d654bef674612132ad54458bfb6a5&location=37.773,-122.413,100').then(function (res) {\n        return res.json();\n      }).then(function (doctors) {\n        var locations = doctors.data.map(function (doctor) {\n          return {\n            lat: doctor.practices[0].lat,\n            lng: doctor.practices[0].lon\n          };\n        });\n        console.log(locations);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    } // map through positions and return markers for each\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: mapStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.335451,\n          lng: -121.998482\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.335451,\n          lng: -121.998482\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        onClose: this.onInfoWindowClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    } //   state = {\n    //     showingInfoWindow: false,\n    //     activeMarker: {},\n    //     selectedPlace: {}\n    //   };\n    //   onMarkerClick = (props, marker, e) =>\n    //     this.setState({\n    //       selectedPlace: props,\n    //       activeMarker: marker,\n    //       showingInfoWindow: true\n    //     });\n    //   onClose = props => {\n    //     if (this.state.showingInfoWindow) {\n    //       this.setState({\n    //         showingInfoWindow: false,\n    //         activeMarker: null\n    //       });\n    //     }\n    //   };\n    //   render() {\n    //     return (\n    //       <CurrentLocation\n    //         centerAroundCurrentLocation\n    //         google={this.props.google}\n    //       >\n    //         <Marker onClick={this.onMarkerClick} name={'current location'} />\n    //         <InfoWindow\n    //           marker={this.state.activeMarker}\n    //           visible={this.state.showingInfoWindow}\n    //           onClose={this.onClose}\n    //         >\n    //           <div>\n    //             <h4>{this.state.selectedPlace.name}</h4>\n    //           </div>\n    //         </InfoWindow>\n    //       </CurrentLocation>\n    //     );\n    //   }\n    // }\n\n  }]);\n\n  return MapContainer;\n}(Component); //export default MapContainer;\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n})(MapContainer);","map":{"version":3,"sources":["/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/MapContainer.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","mapStyles","position","width","height","MapContainer","props","state","positions","fetch","then","res","json","doctors","locations","data","map","doctor","lat","practices","lng","lon","console","log","catch","error","google","onMarkerClick","onInfoWindowClose","apiKey"],"mappings":";;;;;;AAAC,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,UAAb,EAAyBC,MAAzB,EAAiCC,gBAAjC,QAAwD,mBAAxD,C,CAED;AACA;AACA;;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,UADM;AAEhBC,EAAAA,KAAK,EAAE,OAFS;AAGhBC,EAAAA,MAAM,EAAE;AAHQ,CAAlB;;IAMMC,Y;;;;;AACF;AACA,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAATA;AADW,KAAb;AAFiB;AAOpB,G,CACC;;;;;wCACoB;AAClBC,MAAAA,KAAK,CAAC,wHAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;AAGb,YAAMC,SAAS,GAAGD,OAAO,CAACE,IAAR,CAAaC,GAAb,CAAkB,UAAAC,MAAM,EAAI;AAE1C,iBAAO;AAAEC,YAAAA,GAAG,EAAED,MAAM,CAACE,SAAP,CAAiB,CAAjB,EAAoBD,GAA3B;AAAiCE,YAAAA,GAAG,EAAEH,MAAM,CAACE,SAAP,CAAiB,CAAjB,EAAoBE;AAA1D,WAAP;AACH,SAHiB,CAAlB;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AAEH,OAXL,EAYKU,KAZL,CAYW,UAAAC,KAAK;AAAA,eAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAJ;AAAA,OAZhB;AAaH,K,CACC;;;;6BACI;AACN,aACI;AAAK,QAAA,KAAK,EAAExB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,GAAD;AACA,QAAA,MAAM,EAAE,KAAKK,KAAL,CAAWoB,MADnB;AAC2B,QAAA,IAAI,EAAE,EADjC;AACqC,QAAA,aAAa,EAAE;AAACR,UAAAA,GAAG,EAAE,SAAN;AAAiBE,UAAAA,GAAG,EAAE,CAAC;AAAvB,SADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKO,aAAtB;AAAqC,QAAA,QAAQ,EAAE;AAACT,UAAAA,GAAG,EAAE,SAAN;AAAiBE,UAAAA,GAAG,EAAE,CAAC;AAAvB,SAA/C;AACA,QAAA,IAAI,EAAE,kBADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,EAKA,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKQ,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,CADE,CADJ;AAaG,K,CACL;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EAnF2BhC,S,GAqF3B;;;AACA,eAAeI,gBAAgB,CAAC;AAChC6B,EAAAA,MAAM,EAAE;AADwB,CAAD,CAAhB,CAEZxB,YAFY,CAAf","sourcesContent":[" import React, { Component } from 'react';\n import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\n// import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// import CurrentLocation from './CurrentLocation';\n// import CurrentLocation from './Map';\nconst mapStyles = {\n  position: \"relative\",\n  width: \"600px\",\n  height: \"400px\"\n};\n\nclass MapContainer extends Component {\n    // have state that stores your positions\n    constructor(props) {\n      super(props);\n      this.state = {\n        positions\n\n\n      };\n  }\n    // make fetch call\n    componentDidMount() {\n      fetch('https://api.betterdoctor.com/2016-03-01/doctors?user_key=ff5d654bef674612132ad54458bfb6a5&location=37.773,-122.413,100')\n          .then(res => res.json())\n          .then(doctors => {\n\n\n              const locations = doctors.data.map( doctor => {\n\n                  return { lat: doctor.practices[0].lat , lng: doctor.practices[0].lon }\n              })\n              console.log(locations)\n            \n          })\n          .catch(error => console.log(error))\n  }\n    // map through positions and return markers for each\nrender(){\n  return(\n      <div style={mapStyles}>\n    <Map \n    google={this.props.google} zoom={14} initialCenter={{lat: 37.335451, lng: -121.998482}}>\n    {/* put your markers map here */}\n    <Marker onClick={this.onMarkerClick} position={{lat: 37.335451, lng: -121.998482}}\n    name={'Current location'} />\n    <InfoWindow onClose={this.onInfoWindowClose}>\n    \n    </InfoWindow>\n   </Map>\n    </div>\n    );\n    }\n//   state = {\n//     showingInfoWindow: false,\n//     activeMarker: {},\n//     selectedPlace: {}\n//   };\n\n//   onMarkerClick = (props, marker, e) =>\n//     this.setState({\n//       selectedPlace: props,\n//       activeMarker: marker,\n//       showingInfoWindow: true\n//     });\n\n//   onClose = props => {\n//     if (this.state.showingInfoWindow) {\n//       this.setState({\n//         showingInfoWindow: false,\n//         activeMarker: null\n//       });\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <CurrentLocation\n//         centerAroundCurrentLocation\n//         google={this.props.google}\n//       >\n//         <Marker onClick={this.onMarkerClick} name={'current location'} />\n//         <InfoWindow\n//           marker={this.state.activeMarker}\n//           visible={this.state.showingInfoWindow}\n//           onClose={this.onClose}\n//         >\n//           <div>\n//             <h4>{this.state.selectedPlace.name}</h4>\n//           </div>\n//         </InfoWindow>\n//       </CurrentLocation>\n//     );\n//   }\n// }\n  }\n//export default MapContainer;\nexport default GoogleApiWrapper({\napiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}