{"ast":null,"code":"import _classCallCheck from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/App.js\";\nimport React, { Component } from 'react'; //import Map from './Map';\n//import {GoogleApiWrapper} from 'google-maps-react';\n//import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nimport './App.css';\nimport CommentBox from './components/CommentBox';\nimport Comments from './components/Comments';\nimport Info from './components/Info';\nimport Drinformation from './components/Drinformation';\nimport PatientProfile from './components/PatientProfile';\nimport Home from './components/Home';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.handleAddComment = _this.handleAddComment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      activePage: 'app',\n      doctors: [],\n      comments: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"setActivePage\",\n    value: function setActivePage(activePage) {\n      this.setState({\n        activePage: activePage\n      });\n    }\n  }, {\n    key: \"renderPage\",\n    value: function renderPage() {\n      console.log(this.state.activePage);\n\n      if (this.state.activePage === 'app') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Home, {\n          setActivePage: this.setActivePage.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      } else if (this.state.activePage === 'costCalculate') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Drinformation, {\n          setActivePage: this.setActivePage.bind(this),\n          setReqInfo: this.setReqInfo.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n      } else if (this.state.activePage === 'makeReq') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Info, {\n          setActivePage: this.setActivePage.bind(this),\n          reqInfo: this.state.reqInfo,\n          total: this.state.total,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      } else if (this.state.activePage === 'track') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(PatientProfile, {\n          setActivePage: this.setActivePage.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }));\n      }\n    } // componentDidMount(){\n    //   fetch('https://api.betterdoctor.com/2016-03-01/doctors?first_name=Terry&user_key=ff5d654bef674612132ad54458bfb6a5')\n    //   .then( res => res.json())\n    //   .then(json => {\n    //     this.setState({\n    //       isLoaded:true,\n    //       doctors:json,\n    //     })\n    //   })\n    //   .catch(error => console.log(error));\n    //    loadMap('https://maps.googleapis.com/maps/api/js?key=AIzaSyBRfODQceddU_9nyDJyCBQ5lSe20loOk2c&v=3&callback=initMap',function () { })\n    // }\n    // initMap() {\n    //   var getMap = document.getElementById(\"map\");\n    //   // console.log('sdjfbjhsdbfh');\n    //   // getMap.style.height = window.innerHeight + \"px\";\n    //   map = new window.google.maps.Map(getMap, {\n    //       center: {lat: 59.3293235, lng: 18.0685808},\n    //       zoom: 15\n    //   });\n    //   // console.log(map);\n    //   this.setState({map:map})\n    //   }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // var {isLoaded,doctors}= this.state;\n      // if(!isLoaded){\n      //   return <div>app</div>\n      // }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(CommentBox, {\n        handleAddComment: this.handleAddComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        comments: this.state.comments.reverse(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))\n      /* <div className=\"map\">\n       \n      <Map \n      google={this.props.google} zoom={14}>\n      <Marker onClick={this.onMarkerClick}\n      name={'Current location'} />\n      <InfoWindow onClose={this.onInfoWindowClose}>\n         </InfoWindow>\n      </Map>\n       </div> */\n\n      /* <Map\n      google={this.props.google}\n      center={{lat: 18.5204, lng: 73.8567}}\n      height='300px'\n      zoom={15}\n      /> */\n\n      /* data */\n\n      /* <ul>\n      {doctors.map(doctor =>(\n      <li key ={doctor.id}>\n      gender {doctor.gender} \n      last name : {doctor.last_name}\n      </li>\n      ))};\n      </ul> */\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // export default GoogleApiWrapper({\n//  apiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n// })(App);\n//   /**\n//  * Load the google maps Asynchronously\n//  * @param {url} url of the google maps script\n//  */\n// function loadMap(src,onloadFunction) {\n//   var ref = window.document.getElementsByTagName(\"script\")[0];\n//   var script = window.document.createElement(\"script\");\n//   script.src = src;\n//   script.async = true;\n//   script.onerror = loadError;\n//   if (onloadFunction) { script.onload = onloadFunction; }\n//   ref.parentNode.insertBefore(script, ref);\n// }\n// function loadError(oError) {\n// alert(\"Failed to load google map API \"+ oError.target.src );\n// }","map":{"version":3,"sources":["/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/App.js"],"names":["React","Component","CommentBox","Comments","Info","Drinformation","PatientProfile","Home","App","props","handleAddComment","bind","state","activePage","doctors","comments","isLoaded","setState","console","log","setActivePage","setReqInfo","reqInfo","total","reverse"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Map from './Map';\n//import {GoogleApiWrapper} from 'google-maps-react';\n//import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport './App.css';\nimport CommentBox from './components/CommentBox';\nimport Comments from './components/Comments'; \nimport Info from './components/Info';\nimport Drinformation from './components/Drinformation';\nimport PatientProfile from './components/PatientProfile';\nimport Home from './components/Home';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.handleAddComment = this.handleAddComment.bind(this);\n    this.state={\n      activePage: 'app',\n      doctors:[],\n      comments:[],\n      isLoaded:false,\n     \n    }\n\n  }\n  setActivePage(activePage){\n    this.setState({\n      activePage: activePage\n    })\n  }\n\n  renderPage() {\n    console.log(this.state.activePage);\n    if (this.state.activePage === 'app'){\n      return (\n        <div>\n          <Home setActivePage={this.setActivePage.bind(this)}/>\n        </div>\n      )\n    } \n    else if (this.state.activePage === 'costCalculate') {\n        return (\n          <div>\n            <Drinformation setActivePage={this.setActivePage.bind(this)} setReqInfo={this.setReqInfo.bind(this)}/>\n          </div>\n        )\n    } else if (this.state.activePage === 'makeReq') {\n        return (\n          <div>\n            <Info setActivePage={this.setActivePage.bind(this)} reqInfo={this.state.reqInfo} total={this.state.total}/>\n          </div>\n        )\n    } else if (this.state.activePage === 'track') {\n        return (\n          <div>\n            <PatientProfile setActivePage={this.setActivePage.bind(this)}/>\n          </div>\n        )\n    } \n   }\n  // componentDidMount(){\n    \n  //   fetch('https://api.betterdoctor.com/2016-03-01/doctors?first_name=Terry&user_key=ff5d654bef674612132ad54458bfb6a5')\n  //   .then( res => res.json())\n  //   .then(json => {\n  //     this.setState({\n  //       isLoaded:true,\n  //       doctors:json,\n  //     })\n  //   })\n  //   .catch(error => console.log(error));\n\n  //    loadMap('https://maps.googleapis.com/maps/api/js?key=AIzaSyBRfODQceddU_9nyDJyCBQ5lSe20loOk2c&v=3&callback=initMap',function () { })\n  // }\n\n  // initMap() {\n  //   var getMap = document.getElementById(\"map\");\n  //   // console.log('sdjfbjhsdbfh');\n  //   // getMap.style.height = window.innerHeight + \"px\";\n\n  //   map = new window.google.maps.Map(getMap, {\n  //       center: {lat: 59.3293235, lng: 18.0685808},\n  //       zoom: 15\n  //   });\n  //   // console.log(map);\n  //   this.setState({map:map})\n  //   }\n\n\n   \n  render() {\n\n    // var {isLoaded,doctors}= this.state;\n    // if(!isLoaded){\n      //   return <div>app</div>\n      // }\n      return (\n        <div>\n              <CommentBox handleAddComment={this.handleAddComment} />\n              <Comments comments={this.state.comments.reverse()} />\n        </div>\n      /* <div className=\"map\">\n       \n     <Map \n    google={this.props.google} zoom={14}>\n    <Marker onClick={this.onMarkerClick}\n    name={'Current location'} />\n    <InfoWindow onClose={this.onInfoWindowClose}>\n    \n    </InfoWindow>\n   </Map>\n       </div> */\n     /* <Map\n     google={this.props.google}\n     center={{lat: 18.5204, lng: 73.8567}}\n     height='300px'\n     zoom={15}\n    /> */\n\n  \n     /* data */\n     \n      /* <ul>\n    {doctors.map(doctor =>(\n    <li key ={doctor.id}>\n     gender {doctor.gender} \n     last name : {doctor.last_name}\n    </li>\n     ))};\n    </ul> */\n\n\n    \n    );\n  }\n}\n\nexport default App;\n// export default GoogleApiWrapper({\n//  apiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n// })(App);\n//   /**\n//  * Load the google maps Asynchronously\n//  * @param {url} url of the google maps script\n//  */\n// function loadMap(src,onloadFunction) {\n//   var ref = window.document.getElementsByTagName(\"script\")[0];\n//   var script = window.document.createElement(\"script\");\n//   script.src = src;\n//   script.async = true;\n//   script.onerror = loadError;\n//   if (onloadFunction) { script.onload = onloadFunction; }\n//   ref.parentNode.insertBefore(script, ref);\n// }\n// function loadError(oError) {\n// alert(\"Failed to load google map API \"+ oError.target.src );\n// }"]},"metadata":{},"sourceType":"module"}