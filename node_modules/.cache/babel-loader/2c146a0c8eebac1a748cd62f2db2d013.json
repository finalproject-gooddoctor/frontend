{"ast":null,"code":"import _classCallCheck from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/CurrentLocation.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// const mapStyles = {\n//   map: {\n//     position: 'absolute',\n//     width: '100%',\n//     height: '100%'\n//   }\n// };\n// export class CurrentLocation extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     const { lat, lng } = this.props.initialCenter;\n//     this.state = {\n//       currentLocation: {\n//         lat: lat,\n//         lng: lng\n//       }\n//     };\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevProps.google !== this.props.google) {\n//       this.loadMap();\n//     }\n//     if (prevState.currentLocation !== this.state.currentLocation) {\n//       this.recenterMap();\n//     }\n//   }\n//   recenterMap() {\n//     const map = this.map;\n//     const current = this.state.currentLocation;\n//     const google = this.props.google;\n//     const maps = google.maps;\n//     if (map) {\n//       let center = new maps.LatLng(current.lat, current.lng);\n//       map.panTo(center);\n//     }\n//   }\n//   componentDidMount() {\n//     if (this.props.centerAroundCurrentLocation) {\n//       if (navigator && navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition(pos => {\n//           const coords = pos.coords;\n//           this.setState({\n//             currentLocation: {\n//               lat: coords.latitude,\n//               lng: coords.longitude\n//             }\n//           });\n//         });\n//       }\n//     }\n//     this.loadMap();\n//   }\n//   loadMap() {\n//     if (this.props && this.props.google) {\n//       // checks if google is available\n//       const { google } = this.props;\n//       const maps = google.maps;\n//       const mapRef = this.refs.map;\n//       // reference to the actual DOM element\n//       const node = ReactDOM.findDOMNode(mapRef);\n//       let { zoom } = this.props;\n//       const { lat, lng } = this.state.currentLocation;\n//       const center = new maps.LatLng(lat, lng);\n//       const mapConfig = Object.assign(\n//         {},\n//         {\n//           center: center,\n//           zoom: zoom\n//         }\n//       );\n//       // maps.Map() is constructor that instantiates the map\n//       this.map = new maps.Map(node, mapConfig);\n//     }\n//   }\n//   renderChildren() {\n//     const { children } = this.props;\n//     if (!children) return;\n//     return React.Children.map(children, c => {\n//       if (!c) return;\n//       return React.cloneElement(c, {\n//         map: this.map,\n//         google: this.props.google,\n//         mapCenter: this.state.currentLocation\n//       });\n//     });\n//   }\n//   render() {\n//     const style = Object.assign({}, mapStyles.map);\n//    return (\n//      <div>\n//        <div style={style} ref=\"map\">\n//          Loading map...\n//        </div>\n//        {this.renderChildren()}\n//      </div>\n//    );\n//    }\n// }\n// export default CurrentLocation;\n// CurrentLocation.defaultProps = {\n//   zoom: 14,\n//   initialCenter: {\n//     lat: -1.2884,\n//     lng: 36.8233\n//   },\n//   centerAroundCurrentLocation: false,\n//   visible: true\n// };\nimport React from \"react\";\nimport { compose, withProps } from \"recompose\"; //react utility belt for function components and higher-order compoenets.\n\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nvar google = window.google; //this takes care of an error that google is not defined\n\nvar _require = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\"),\n    MarkerWithLabel = _require.MarkerWithLabel;\n\nvar color = {\n  'blue': 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n  'red': 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n};\nvar drop = {\n  'drop': google.maps.Animation.DROP,\n  'bounce': google.maps.Animation.BOUNCE\n};\nvar mar;\nvar mar2;\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n  // googleMapURL:  'https://maps.googleapis.com/maps/api/js?key=AIzaSyBehz0GVd8SbdQVMswQlcV-cx0yjExniA0&v=3.exp&libraries=geometry,drawing,place',\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"90vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      top: '4em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 12,\n    defaultCenter: {\n      lat: props.myloc.lat,\n      lng: props.myloc.lng\n    },\n    options: {\n      streetViewControl: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \" \", console.log(props), \"return\", React.createElement(MarkerWithLabel, {\n    position: props.myloc,\n    labelAnchor: new google.maps.Point(30, 48),\n    labelStyle: {\n      backgroundColor: \"blue\",\n      fontSize: \"10px\",\n      color: \"white\",\n      padding: \"3px\"\n    },\n    defaultIcon: {\n      url: 'https://cdn4.iconfinder.com/data/icons/32x32-free-design-icons/32/Home.png',\n      width: '10px'\n    },\n    animation: google.maps.Animation.DROP,\n    onMouseOver: function onMouseOver(e) {\n      console.log(_objectSpread({}, props));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"You are Here\")), console.log(props.doctors), props.doctors.length < 2 ? mar = color['red'] : mar = color['blue'], props.doctors.length < 2 ? mar2 = drop['bounce'] : mar2 = drop['drop'], console.log(props.doctors), props.doctors.map(function (map, i) {\n    return React.createElement(Marker, {\n      icon: {\n        url: \"\".concat(mar)\n      },\n      key: i,\n      position: {\n        lat: map.lat,\n        lng: map.lng\n      },\n      animation: mar2,\n      onMouseOver: function onMouseOver(e) {\n        props.onMarkerHover(map.visitAddress);\n      },\n      onMouseOut: function onMouseOut(e) {\n        props.onMouseOut(map.visitAddress);\n      },\n      visible: true // label = {props.doctors[i].name}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    });\n  }));\n});\n\nvar CurrentLocation =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CurrentLocation, _React$PureComponent);\n\n  function CurrentLocation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CurrentLocation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CurrentLocation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleMarkerHover = function (id) {\n      _this.props.hoverFunc(id); // console.log(\"over marker with Id: \", id);\n\n    };\n\n    _this.handleMouseOver = function (id) {\n      _this.props.mouseOut(id);\n    };\n\n    return _this;\n  }\n\n  _createClass(CurrentLocation, [{\n    key: \"render\",\n    value: function render() {\n      var doctors = this.props.doctors;\n      var myloc = this.props.myloc;\n      return React.createElement(MyMapComponent, {\n        onMarkerHover: this.handleMarkerHover,\n        onMouseOut: this.handleMouseOver,\n        doctors: doctors,\n        myloc: myloc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CurrentLocation;\n}(React.PureComponent);\n\nexport default CurrentLocation;","map":{"version":3,"sources":["/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/CurrentLocation.js"],"names":["React","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","google","window","require","MarkerWithLabel","color","drop","maps","Animation","DROP","BOUNCE","mar","mar2","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","top","props","lat","myloc","lng","streetViewControl","console","log","Point","backgroundColor","fontSize","padding","url","width","e","doctors","length","map","i","onMarkerHover","visitAddress","onMouseOut","CurrentLocation","handleMarkerHover","id","hoverFunc","handleMouseOver","mouseOut","PureComponent"],"mappings":";;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC,C,CAAgD;;AAChD,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,mBAA/D;AACA,IAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB,C,CAA8B;;eACFE,OAAO,CAAC,yDAAD,C;IAA3BC,e,YAAAA,e;;AACR,IAAMC,KAAK,GAAG;AACR,UAAS,uDADD;AAER,SAAQ;AAFA,CAAd;AAIA,IAAMC,IAAI,GAAG;AACT,UAASL,MAAM,CAACM,IAAP,CAAYC,SAAZ,CAAsBC,IADtB;AAET,YAAWR,MAAM,CAACM,IAAP,CAAYC,SAAZ,CAAsBE;AAFxB,CAAb;AAIA,IAAIC,GAAJ;AACA,IAAIC,IAAJ;AAEA,IAAMC,cAAc,GAAGlB,OAAO,CAC5BC,SAAS,CAAC;AACRkB,EAAAA,YAAY,EAAE,mFADN;AAER;AACAC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR;AAIRC,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","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// const mapStyles = {\n//   map: {\n//     position: 'absolute',\n//     width: '100%',\n//     height: '100%'\n//   }\n// };\n\n// export class CurrentLocation extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     const { lat, lng } = this.props.initialCenter;\n//     this.state = {\n//       currentLocation: {\n//         lat: lat,\n//         lng: lng\n//       }\n//     };\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevProps.google !== this.props.google) {\n//       this.loadMap();\n//     }\n//     if (prevState.currentLocation !== this.state.currentLocation) {\n//       this.recenterMap();\n//     }\n//   }\n//   recenterMap() {\n//     const map = this.map;\n//     const current = this.state.currentLocation;\n\n//     const google = this.props.google;\n//     const maps = google.maps;\n\n//     if (map) {\n//       let center = new maps.LatLng(current.lat, current.lng);\n//       map.panTo(center);\n//     }\n//   }\n//   componentDidMount() {\n//     if (this.props.centerAroundCurrentLocation) {\n//       if (navigator && navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition(pos => {\n//           const coords = pos.coords;\n//           this.setState({\n//             currentLocation: {\n//               lat: coords.latitude,\n//               lng: coords.longitude\n//             }\n//           });\n//         });\n//       }\n//     }\n//     this.loadMap();\n//   }\n//   loadMap() {\n//     if (this.props && this.props.google) {\n//       // checks if google is available\n//       const { google } = this.props;\n//       const maps = google.maps;\n\n//       const mapRef = this.refs.map;\n\n//       // reference to the actual DOM element\n//       const node = ReactDOM.findDOMNode(mapRef);\n\n//       let { zoom } = this.props;\n//       const { lat, lng } = this.state.currentLocation;\n//       const center = new maps.LatLng(lat, lng);\n//       const mapConfig = Object.assign(\n//         {},\n//         {\n//           center: center,\n//           zoom: zoom\n//         }\n//       );\n\n//       // maps.Map() is constructor that instantiates the map\n//       this.map = new maps.Map(node, mapConfig);\n//     }\n//   }\n\n//   renderChildren() {\n//     const { children } = this.props;\n\n//     if (!children) return;\n\n//     return React.Children.map(children, c => {\n//       if (!c) return;\n//       return React.cloneElement(c, {\n//         map: this.map,\n//         google: this.props.google,\n//         mapCenter: this.state.currentLocation\n//       });\n//     });\n//   }\n//   render() {\n//     const style = Object.assign({}, mapStyles.map);\n//    return (\n//      <div>\n//        <div style={style} ref=\"map\">\n//          Loading map...\n//        </div>\n//        {this.renderChildren()}\n//      </div>\n//    );\n//    }\n// }\n// export default CurrentLocation;\n\n// CurrentLocation.defaultProps = {\n//   zoom: 14,\n//   initialCenter: {\n//     lat: -1.2884,\n//     lng: 36.8233\n//   },\n//   centerAroundCurrentLocation: false,\n//   visible: true\n// };\n\nimport React from \"react\"\nimport { compose, withProps } from \"recompose\"; //react utility belt for function components and higher-order compoenets.\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nconst google = window.google; //this takes care of an error that google is not defined\nconst { MarkerWithLabel } = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\nconst color = {\n      'blue' : 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n      'red' : 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n    };\nconst drop = {\n    'drop' : google.maps.Animation.DROP,\n    'bounce' : google.maps.Animation.BOUNCE\n}\nvar mar;\nvar mar2;\n\nconst MyMapComponent = compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n    // googleMapURL:  'https://maps.googleapis.com/maps/api/js?key=AIzaSyBehz0GVd8SbdQVMswQlcV-cx0yjExniA0&v=3.exp&libraries=geometry,drawing,place',\n    loadingElement: <div style={{ height: `100%`}} />,\n    containerElement: <div style={{ height: `90vh`}} />,\n    mapElement: <div style={{ height: `100%`, top: '4em' }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) =>\n  <GoogleMap\n    defaultZoom={12}\n    defaultCenter={{ lat: props.myloc.lat, lng: props.myloc.lng}}\n    options={{streetViewControl: false}}\n\n  > {console.log(props)}\n    return\n    <MarkerWithLabel \n    position={ props.myloc }\n    labelAnchor={new google.maps.Point(30,48)}\n    labelStyle={{backgroundColor: \"blue\", fontSize: \"10px\", color:\"white\", padding: \"3px\"}}\n    defaultIcon = {{url:'https://cdn4.iconfinder.com/data/icons/32x32-free-design-icons/32/Home.png', width: '10px'}}\n    animation = {google.maps.Animation.DROP}\n    onMouseOver = {(e)=>{console.log({...props})}}\n     >\n     <div>You are Here</div>\n     </MarkerWithLabel>\n     {console.log(props.doctors)}\n    {(props.doctors.length < 2) ? (mar = (color['red'])) : (mar = (color['blue']))}\n    {(props.doctors.length < 2) ? (mar2 = (drop['bounce'])) : (mar2 = (drop['drop']))}\n    {console.log(props.doctors)}\n    {props.doctors.map((map, i)=>{\n      return <Marker icon={{url: `${mar}`}}\n      key={i} position={{ lat: map.lat, lng: map.lng }} \n      animation={mar2} \n      onMouseOver={(e)=>{props.onMarkerHover(map.visitAddress)}} \n      onMouseOut={(e)=>{props.onMouseOut(map.visitAddress)}}\n      visible = {true}\n      // label = {props.doctors[i].name}\n      /> \n    })}\n  </GoogleMap>\n)\n\nclass CurrentLocation extends React.PureComponent {\n\n  handleMarkerHover = (id) => {\n    this.props.hoverFunc(id);\n    // console.log(\"over marker with Id: \", id);\n  }\n\n  handleMouseOver = (id) => {\n    this.props.mouseOut(id);\n  }\n\n  render() {\n    const doctors = this.props.doctors;\n    const myloc = this.props.myloc;\n      return(\n          <MyMapComponent \n          onMarkerHover={this.handleMarkerHover}\n          onMouseOut={this.handleMouseOver} \n          doctors = {doctors} \n          myloc = {myloc} \n          />\n\n       )\n  }\n}\n\nexport default CurrentLocation;"]},"metadata":{},"sourceType":"module"}