{"ast":null,"code":"import _classCallCheck from \"/Users/mohrahalateeq/code/wdi/projects/project4/doctor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohrahalateeq/code/wdi/projects/project4/doctor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohrahalateeq/code/wdi/projects/project4/doctor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohrahalateeq/code/wdi/projects/project4/doctor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohrahalateeq/code/wdi/projects/project4/doctor/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohrahalateeq/code/wdi/projects/project4/doctor/src/components/Map.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport GoogleMapReact from 'google-map-react';\nimport DocumentTitle from 'react-document-title';\nimport _ from 'lodash';\nimport '../css/MapShelters.css';\n\nvar MapShelters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapShelters, _Component);\n\n  function MapShelters() {\n    _classCallCheck(this, MapShelters);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MapShelters).apply(this, arguments));\n  }\n\n  _createClass(MapShelters, [{\n    key: \"addMarkers\",\n    value: function addMarkers(map, maps) {\n      if (this.props && this.props.places) {\n        return _.map(this.props.places, function (sample) {\n          var lat = parseFloat(sample[\"Latitude\"]);\n          var long = parseFloat(sample[\"Longitude\"]);\n          var coordinates = {\n            lat: lat,\n            lng: long\n          };\n          var marker = new maps.Marker({\n            position: coordinates,\n            map: map,\n            title: 'Map'\n          });\n          var infoWindow = new maps.InfoWindow({\n            content: \"<strong>\" + sample.ShelterName + \"</strong>\" + \"<br>\" + sample.Address + \"<br/> Capacity: \" + sample.Capacity\n          });\n          marker.addListener('click', function () {\n            infoWindow.open(map, marker);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"displayLocations\",\n    value: function displayLocations() {\n      if (this.props) {\n        return _.map(this.props.places, function (sample) {\n          return React.createElement(\"li\", {\n            key: sample.ShelterName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, sample.ShelterName);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (!this.props.users || Object.keys(this.props.users).length !== 1) {\n        return React.createElement(DocumentTitle, {\n          title: \"Map\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \" Cannot view without signing in \"));\n      }\n\n      var mapOptions = {\n        zoom: 12,\n        center: {\n          lat: 33.753746,\n          lng: -84.386330\n        }\n      };\n      return React.createElement(DocumentTitle, {\n        title: \"Map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/mainscreen\",\n        className: \"btn btn-primary\",\n        id: \"entryButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Back to List \"), React.createElement(\"div\", {\n        className: \"mapImage\",\n        style: {\n          height: '600px',\n          width: '600px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyCo9EKyo6UAag1kLNl3n5dKhDWcCTScXCI'\n        },\n        defaultCenter: mapOptions.center,\n        defaultZoom: mapOptions.zoom,\n        id: \"shelterMap\",\n        onGoogleApiLoaded: function onGoogleApiLoaded(_ref) {\n          var map = _ref.map,\n              maps = _ref.maps;\n          return _this.addMarkers(map, maps);\n        },\n        clickableIcons: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"h1\", {\n        id: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" Shelters Displayed \"), React.createElement(\"ul\", {\n        id: \"data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" \", this.displayLocations(), \" \"))));\n    }\n  }]);\n\n  return MapShelters;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    places: state.places,\n    users: state.users\n  };\n}\n\nexport default connect(mapStateToProps)(MapShelters);","map":{"version":3,"sources":["/Users/mohrahalateeq/code/wdi/projects/project4/doctor/src/components/Map.js"],"names":["React","Component","Link","connect","GoogleMapReact","DocumentTitle","_","MapShelters","map","maps","props","places","sample","lat","parseFloat","long","coordinates","lng","marker","Marker","position","title","infoWindow","InfoWindow","content","ShelterName","Address","Capacity","addListener","open","users","Object","keys","length","mapOptions","zoom","center","height","width","key","addMarkers","displayLocations","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport GoogleMapReact from 'google-map-react';\nimport DocumentTitle from 'react-document-title';\n\n\nimport _ from 'lodash';\nimport '../css/MapShelters.css';\n\n\nclass MapShelters extends Component {\n    addMarkers(map, maps) {\n        if (this.props && this.props.places) {\n            return _.map(this.props.places,(sample) => {\n                let lat = parseFloat(sample[\"Latitude\"]);\n                let long = parseFloat(sample[\"Longitude\"]);\n                let coordinates = { lat: lat, lng: long};\n\n                let marker = new maps.Marker({\n                    position: coordinates,\n                    map,\n                    title: 'Map'\n                });\n                let infoWindow = new maps.InfoWindow({\n                    content: \"<strong>\" + sample.ShelterName + \"</strong>\" + \"<br>\"\n                    + sample.Address + \"<br/> Capacity: \" + sample.Capacity\n                })\n                marker.addListener('click', () => {\n                    infoWindow.open(map, marker)\n                })\n\n            })\n        }\n    }\n    displayLocations() {\n        if (this.props) {\n            return _.map(this.props.places,(sample) => {\n                return (<li key={sample.ShelterName}>\n                    {sample.ShelterName}</li>)\n            })\n        }\n    }\n    render() {\n        if (!this.props.users ||\n            Object.keys(this.props.users).length !== 1) {\n            return(\n            <DocumentTitle title = \"Map\">\n            <div> Cannot view without signing in </div>\n            </DocumentTitle>\n            );\n        }\n        const mapOptions = {\n            zoom: 12,\n            center: { lat: 33.753746, lng: -84.386330}\n        }\n        return(\n            <DocumentTitle title=\"Map\">\n            <div>\n            <Link to = \"/mainscreen\"\n                className = \"btn btn-primary\"\n                id = \"entryButton\">\n                Back to List </Link>\n          <div className = \"mapImage\" style={{height: '600px', width: '600px'}}>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyCo9EKyo6UAag1kLNl3n5dKhDWcCTScXCI' }}\n                defaultCenter={mapOptions.center}\n                defaultZoom={mapOptions.zoom}\n                id = \"shelterMap\"\n                onGoogleApiLoaded={({map, maps}) => this.addMarkers(map, maps)}\n                clickableIcons={true}\n            ></GoogleMapReact>\n\n            </div>\n            <h1 id=\"title\"> Shelters Displayed </h1>\n            <ul id=\"data\">\n                <h6> {this.displayLocations()} </h6>\n            </ul>\n            </div>\n            </DocumentTitle>\n\n)}}\nfunction mapStateToProps(state) {\n  return {\n    places: state.places,\n    users: state.users\n  }\n}\n\nexport default connect(mapStateToProps)(MapShelters);"]},"metadata":{},"sourceType":"module"}