{"ast":null,"code":"import _classCallCheck from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/MapContainer.js\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react'; // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// import CurrentLocation from './CurrentLocation';\n// import CurrentLocation from './Map';\n\nvar mapStyles = {\n  position: \"relative\",\n  width: \"600px\",\n  height: \"400px\"\n};\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  // have state that stores your positions\n  function MapContainer(_props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, _props));\n\n    _this.onMarkerClick = function (props, marker, e) {\n      console.log(props);\n\n      _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    _this.state = {\n      position: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      isLoaded: false\n    };\n    return _this;\n  } // make fetch call\n\n\n  _createClass(MapContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://api.betterdoctor.com/2016-03-01/doctors?user_key=ff5d654bef674612132ad54458bfb6a5&location=37.773,-122.413,100').then(function (res) {\n        return res.json();\n      }).then(function (doctors) {\n        var locations = doctors.data.map(function (doctor) {\n          return {\n            lat: doctor.practices[0].lat,\n            lng: doctor.practices[0].lon\n          };\n        });\n\n        _this2.setState({\n          doctors: doctors.data\n        });\n\n        console.log(locations);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"renderMarkers\",\n    value: function renderMarkers() {}\n  }, {\n    key: \"render\",\n    // map through positions and return markers for each\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: mapStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.335451,\n          lng: -121.998482\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.335451,\n          lng: -121.998482\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        onClose: this.onInfoWindowClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.selectedPlace.name))));\n    } //   render() {\n    //     return (\n    //       <CurrentLocation\n    //         centerAroundCurrentLocation\n    //         google={this.props.google}\n    //       >\n    //         <Marker onClick={this.onMarkerClick} name={'current location'} />\n    //         <InfoWindow\n    //           marker={this.state.activeMarker}\n    //           visible={this.state.showingInfoWindow}\n    //           onClose={this.onClose}\n    //         >\n    //           <div>\n    //             <h4>{this.state.selectedPlace.name}</h4>\n    //           </div>\n    //         </InfoWindow>\n    //       </CurrentLocation>\n    //     );\n    //   }\n    // }\n\n  }]);\n\n  return MapContainer;\n}(Component); //export default MapContainer;\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n})(MapContainer);","map":{"version":3,"sources":["/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/MapContainer.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","mapStyles","position","width","height","MapContainer","props","onMarkerClick","marker","e","console","log","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","isLoaded","fetch","then","res","json","doctors","locations","data","map","doctor","lat","practices","lng","lon","catch","error","google","onInfoWindowClose","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n\n// import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// import CurrentLocation from './CurrentLocation';\n// import CurrentLocation from './Map';\nconst mapStyles = {\n  position: \"relative\",\n  width: \"600px\",\n  height: \"400px\"\n};\n\nclass MapContainer extends Component {\n  // have state that stores your positions\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      isLoaded: false\n    \n    }; \n  }\n\n  \n  // make fetch call\n  componentDidMount() {\n    fetch('https://api.betterdoctor.com/2016-03-01/doctors?user_key=ff5d654bef674612132ad54458bfb6a5&location=37.773,-122.413,100')\n      .then(res => res.json())\n      .then(doctors => {\n        const locations = doctors.data.map(doctor => {\n          return { lat: doctor.practices[0].lat, lng: doctor.practices[0].lon }\n        })\n        this.setState({doctors: doctors.data})\n        console.log(locations)\n      })\n      .catch(error => console.log(error))\n  }\n  onMarkerClick = (props, marker, e) =>{\n    console.log(props)\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n\n  renderMarkers(){\n\n  }\n  \n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  \n  // map through positions and return markers for each\n  render() {\n    return (\n      <div style={mapStyles}>\n        <Map\n          google={this.props.google} zoom={14} initialCenter={{ lat: 37.335451, lng: -121.998482 }}>\n          {/* <Map\n            google={this.props.google} zoom={14} initialCenter={{ lat: 37.82312, lng: -122.25835 }}>\n            <Map\n              google={this.props.google} zoom={14} initialCenter={{ lat: 37.791198, lng: -122.431769 }}>\n              <Map\n                google={this.props.google} zoom={14} initialCenter={{ lat: 37.15413, lng: -121.64631 }}>\n                <Map\n                  google={this.props.google} zoom={14} initialCenter={{ lat: 37.50761, lng: -120.84107 }}>\n                  <Map\n                    google={this.props.google} zoom={14} initialCenter={{ lat: 37.94523, lng: -122.53683 }}>\n                    <Map\n                      google={this.props.google} zoom={14} initialCenter={{ lat: 37.3029, lng: -121.91325 }}>\n                      <Map\n                        google={this.props.google} zoom={14} initialCenter={{ lat: 37.698169, lng: -122.089625 }}>\n                        <Map\n                          google={this.props.google} zoom={14} initialCenter={{ lat: 38.017636, lng: -121.297499 }}> */}\n\n                          {/* put your markers map here */}\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.335451, lng: -121.998482 }}\n                            name={'Current location'} />\n                          {/* <Marker onClick={this.onMarkerClick} position={{ lat: 37.82312, lng: -122.25835 }}\n                            name={'Current location'} />\n\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.791198, lng: -122.431769 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.15413, lng: -121.64631 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.50761, lng: -120.84107 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.94523, lng: -122.53683 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.3029, lng: -121.91325 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.698169, lng: -122.089625 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 38.017636, lng: -121.297499 }}\n                            name={'Current location'} /> */}\n                          <InfoWindow onClose={this.onInfoWindowClose}>\n                            <h1>{this.state.selectedPlace.name}</h1>\n                          </InfoWindow>\n                          </Map>\n                        {/* </Map></Map></Map></Map></Map></Map></Map></Map></Map> */}\n      </div>\n      \n    );\n  }\n  //   render() {\n  //     return (\n  //       <CurrentLocation\n  //         centerAroundCurrentLocation\n  //         google={this.props.google}\n  //       >\n  //         <Marker onClick={this.onMarkerClick} name={'current location'} />\n  //         <InfoWindow\n  //           marker={this.state.activeMarker}\n  //           visible={this.state.showingInfoWindow}\n  //           onClose={this.onClose}\n  //         >\n  //           <div>\n  //             <h4>{this.state.selectedPlace.name}</h4>\n  //           </div>\n  //         </InfoWindow>\n  //       </CurrentLocation>\n  //     );\n  //   }\n  // }\n}\n\n//export default MapContainer;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}