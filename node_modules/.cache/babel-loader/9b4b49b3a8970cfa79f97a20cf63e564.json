{"ast":null,"code":"import _classCallCheck from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/MapContainer.js\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react'; // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// import CurrentLocation from './CurrentLocation';\n// import CurrentLocation from './Map';\n\nvar mapStyles = {\n  position: \"relative\",\n  width: \"600px\",\n  height: \"400px\"\n};\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  // have state that stores your positions\n  function MapContainer(_props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, _props));\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    _this.state = {\n      position: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      isLoaded: false\n    };\n    return _this;\n  } // make fetch call\n\n\n  _createClass(MapContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('https://api.betterdoctor.com/2016-03-01/doctors?user_key=ff5d654bef674612132ad54458bfb6a5&location=37.773,-122.413,100').then(function (res) {\n        return res.json();\n      }).then(function (doctors) {\n        var locations = doctors.data.map(function (doctor) {\n          return {\n            lat: doctor.practices[0].lat,\n            lng: doctor.practices[0].lon\n          };\n        });\n        console.log(locations);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    // map through positions and return markers for each\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: mapStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.335451,\n          lng: -121.998482\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.82312,\n          lng: -122.25835\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.791198,\n          lng: -122.431769\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.15413,\n          lng: -121.64631\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.50761,\n          lng: -120.84107\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.94523,\n          lng: -122.53683\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.3029,\n          lng: -121.91325\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 37.698169,\n          lng: -122.089625\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: 38.017636,\n          lng: -121.297499\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.335451,\n          lng: -121.998482\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.82312,\n          lng: -122.25835\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.791198,\n          lng: -122.431769\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.15413,\n          lng: -121.64631\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.50761,\n          lng: -120.84107\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.94523,\n          lng: -122.53683\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.3029,\n          lng: -121.91325\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 37.698169,\n          lng: -122.089625\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        position: {\n          lat: 38.017636,\n          lng: -121.297499\n        },\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        onClose: this.onInfoWindowClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })))))))))));\n    } //   render() {\n    //     return (\n    //       <CurrentLocation\n    //         centerAroundCurrentLocation\n    //         google={this.props.google}\n    //       >\n    //         <Marker onClick={this.onMarkerClick} name={'current location'} />\n    //         <InfoWindow\n    //           marker={this.state.activeMarker}\n    //           visible={this.state.showingInfoWindow}\n    //           onClose={this.onClose}\n    //         >\n    //           <div>\n    //             <h4>{this.state.selectedPlace.name}</h4>\n    //           </div>\n    //         </InfoWindow>\n    //       </CurrentLocation>\n    //     );\n    //   }\n    // }\n\n  }]);\n\n  return MapContainer;\n}(Component);\n\nfunction initMap() {\n  var uluru = {\n    lat: -25.363,\n    lng: 131.044\n  };\n  var map = new google.maps.Map(document.getElementById('map'), {\n    zoom: 4,\n    center: uluru\n  });\n  var contentString = '<div id=\"content\">' + '<div id=\"siteNotice\">' + '</div>' + '<h1 id=\"firstHeading\" class=\"firstHeading\">Uluru</h1>' + '<div id=\"bodyContent\">' + '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' + 'sandstone rock formation in the southern part of the ' + 'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) ' + 'south west of the nearest large town, Alice Springs; 450&#160;km ' + '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major ' + 'features of the Uluru - Kata Tjuta National Park. Uluru is ' + 'sacred to the Pitjantjatjara and Yankunytjatjara, the ' + 'Aboriginal people of the area. It has many springs, waterholes, ' + 'rock caves and ancient paintings. Uluru is listed as a World ' + 'Heritage Site.</p>' + '<p>Attribution: Uluru, <a href=\"https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194\">' + 'https://en.wikipedia.org/w/index.php?title=Uluru</a> ' + '(last visited June 22, 2009).</p>' + '</div>' + '</div>';\n  var infowindow = new google.maps.InfoWindow({\n    content: contentString\n  });\n  var marker = new google.maps.Marker({\n    position: uluru,\n    map: map,\n    title: 'Uluru (Ayers Rock)'\n  });\n  marker.addListener('click', function () {\n    infowindow.open(map, marker);\n  });\n} //export default MapContainer;\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n})(MapContainer);","map":{"version":3,"sources":["/Users/mohrahalateeq/code/wdi/projects/project4/FinalProject/doctor/src/components/MapContainer.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","mapStyles","position","width","height","MapContainer","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","isLoaded","fetch","then","res","json","doctors","locations","data","map","doctor","lat","practices","lng","lon","console","log","catch","error","google","onInfoWindowClose","initMap","uluru","maps","document","getElementById","zoom","center","contentString","infowindow","content","title","addListener","open","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n\n// import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// import CurrentLocation from './CurrentLocation';\n// import CurrentLocation from './Map';\nconst mapStyles = {\n  position: \"relative\",\n  width: \"600px\",\n  height: \"400px\"\n};\n\nclass MapContainer extends Component {\n  // have state that stores your positions\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      isLoaded: false\n    \n    }; \n  }\n\n  \n  // make fetch call\n  componentDidMount() {\n    fetch('https://api.betterdoctor.com/2016-03-01/doctors?user_key=ff5d654bef674612132ad54458bfb6a5&location=37.773,-122.413,100')\n      .then(res => res.json())\n      .then(doctors => {\n        const locations = doctors.data.map(doctor => {\n          return { lat: doctor.practices[0].lat, lng: doctor.practices[0].lon }\n        })\n        console.log(locations)\n      })\n      .catch(error => console.log(error))\n  }\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  \n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  \n  // map through positions and return markers for each\n  render() {\n    return (\n      <div style={mapStyles}>\n        <Map\n          google={this.props.google} zoom={14} initialCenter={{ lat: 37.335451, lng: -121.998482 }}>\n          <Map\n            google={this.props.google} zoom={14} initialCenter={{ lat: 37.82312, lng: -122.25835 }}>\n            <Map\n              google={this.props.google} zoom={14} initialCenter={{ lat: 37.791198, lng: -122.431769 }}>\n              <Map\n                google={this.props.google} zoom={14} initialCenter={{ lat: 37.15413, lng: -121.64631 }}>\n                <Map\n                  google={this.props.google} zoom={14} initialCenter={{ lat: 37.50761, lng: -120.84107 }}>\n                  <Map\n                    google={this.props.google} zoom={14} initialCenter={{ lat: 37.94523, lng: -122.53683 }}>\n                    <Map\n                      google={this.props.google} zoom={14} initialCenter={{ lat: 37.3029, lng: -121.91325 }}>\n                      <Map\n                        google={this.props.google} zoom={14} initialCenter={{ lat: 37.698169, lng: -122.089625 }}>\n                        <Map\n                          google={this.props.google} zoom={14} initialCenter={{ lat: 38.017636, lng: -121.297499 }}>\n\n                          {/* put your markers map here */}\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.335451, lng: -121.998482 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.82312, lng: -122.25835 }}\n                            name={'Current location'} />\n\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.791198, lng: -122.431769 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.15413, lng: -121.64631 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.50761, lng: -120.84107 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.94523, lng: -122.53683 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.3029, lng: -121.91325 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 37.698169, lng: -122.089625 }}\n                            name={'Current location'} />\n                          <Marker onClick={this.onMarkerClick} position={{ lat: 38.017636, lng: -121.297499 }}\n                            name={'Current location'} />\n                          <InfoWindow onClose={this.onInfoWindowClose}>\n                          </InfoWindow>\n                        </Map></Map></Map></Map></Map></Map></Map></Map></Map>\n      </div>\n      \n    );\n  }\n  //   render() {\n  //     return (\n  //       <CurrentLocation\n  //         centerAroundCurrentLocation\n  //         google={this.props.google}\n  //       >\n  //         <Marker onClick={this.onMarkerClick} name={'current location'} />\n  //         <InfoWindow\n  //           marker={this.state.activeMarker}\n  //           visible={this.state.showingInfoWindow}\n  //           onClose={this.onClose}\n  //         >\n  //           <div>\n  //             <h4>{this.state.selectedPlace.name}</h4>\n  //           </div>\n  //         </InfoWindow>\n  //       </CurrentLocation>\n  //     );\n  //   }\n  // }\n}\nfunction initMap() {\n  var uluru = {lat: -25.363, lng: 131.044};\n  var map = new google.maps.Map(document.getElementById('map'), {\n    zoom: 4,\n    center: uluru\n  });\n\n  var contentString = '<div id=\"content\">'+\n      '<div id=\"siteNotice\">'+\n      '</div>'+\n      '<h1 id=\"firstHeading\" class=\"firstHeading\">Uluru</h1>'+\n      '<div id=\"bodyContent\">'+\n      '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' +\n      'sandstone rock formation in the southern part of the '+\n      'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) '+\n      'south west of the nearest large town, Alice Springs; 450&#160;km '+\n      '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major '+\n      'features of the Uluru - Kata Tjuta National Park. Uluru is '+\n      'sacred to the Pitjantjatjara and Yankunytjatjara, the '+\n      'Aboriginal people of the area. It has many springs, waterholes, '+\n      'rock caves and ancient paintings. Uluru is listed as a World '+\n      'Heritage Site.</p>'+\n      '<p>Attribution: Uluru, <a href=\"https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194\">'+\n      'https://en.wikipedia.org/w/index.php?title=Uluru</a> '+\n      '(last visited June 22, 2009).</p>'+\n      '</div>'+\n      '</div>';\n\n  var infowindow = new google.maps.InfoWindow({\n    content: contentString\n  });\n\n  var marker = new google.maps.Marker({\n    position: uluru,\n    map: map,\n    title: 'Uluru (Ayers Rock)'\n  });\n  marker.addListener('click', function() {\n    infowindow.open(map, marker);\n  });\n}\n//export default MapContainer;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyACuOUScJZZQ_W7YC6wVtavyU0LzoxvHbE'\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}